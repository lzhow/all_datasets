Please analyze the two following provided code files in C or Java. Identify if they are semantically equal. 'Semantically equal' means two codes have the same meaning, that they have the same output given the same input.


Please identify if the two following codes are semantically equal. Please only answer `yes` or `no`. `yes` means they are semantically equal. `no` means they are not. 
Input :
    ```Code 
main() 
{ 
	int a[4]={-14,6,28};
	int number,temp1,temp2,end,i,j; 
	printf("original array is:\n"); 
	for(i=0;i<3;i++) 
		printf("%5d",a[i]); 
	printf("\n"); 
	printf("insert a new number:"); 
	scanf("%d",&number); 
	end=a[2]; 
	if(number>=end) 
		a[3]=number; 
	else 
	{
		for(i=0;i<3;i++) 
		{ 
			if(a[i]>number) 
			{
				temp1=a[i]; 
				a[i]=number; 
				for(j=i+1;j<4;j++)
				{
					temp2=a[j]; 
					a[j]=temp1; 
					temp1=temp2;
				} 
				break;
			}
		} 
	} 
	for(i=0;i<4;i++) 
		printf("%6d",a[i]); 
	printf("\n");
}
```
```Mutant Code 
main() 
{ 
	int a[4]={-14,6,28};
	int number,temp1,temp2,end,i,j; 
	printf("original array is:\n"); 
	for(i=0;i<3;i++) 
		printf("%5d",a[i]); 
	printf("\n"); 
	printf("insert a new number:"); 
	scanf("%d",&number); 
	end=a[2]; 
	if(number>=end) 
		a[3]=number; 
	else 
	{
		for(i=0;i<3;i++) 
		{ 
			if(a[i]>number) 
			{
				temp1=a[i]; 
				a[i]=number++;
				for(j=i+1;j<4;j++)
				{
					temp2=a[j]; 
					a[j]=temp1; 
					temp1=temp2;
				} 
				break;
			}
		} 
	} 
	for(i=0;i<4;i++) 
		printf("%6d",a[i]); 
	printf("\n");
}
```
The difference patch is 

    ```
    @@ -21 +21 @@
-				a[i]=number;
+				a[i]=number++;

    ```