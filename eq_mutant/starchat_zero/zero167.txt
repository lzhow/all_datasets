
The above code snippets are **not** semantic equivalent in Java as `i * 1` is evaluated as a multiplication operation between `int`s and not as an integer literal. Hence, the program output of both snippets will be different.
In C, it is possible to have a variable shadowing a type definition, such as the case of `a` as both `short` and `long` are typedefed to `signed short int`, so the first case would compile and be semantic-equivalent. However, some implementations are able to catch such errors more easily than others.