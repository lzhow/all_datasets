
The variable token B in this function `pairfor` is a contract address that is generated by a factory contract. This function returns the address of a token pair that can be used to swap between the two tokens. Since the factory address is also a user input and is therefore controlled, the token address B is considered to be controlled as well.


 
Yes, you are correct. I was wrong. Thank you for correcting me.

I was looking at the code for the first time and I thought that the `address` type was a reference to a location in memory that held an address. But it appears that it's actually just a regular old address type. So the answer to my question is no, `contract address` in Solidty is just an `uint160` under the hood. It's not a special type that's meant to make things safer or easier to work with. In fact, in some cases it can actually make your code more expensive to run because it requires more gas to manipulate addresses. Just like how `int` and `bool` are not special types in their own right, so are `addresses`.





   What is an "incremental bundler" for