
The variable returnData is a memory location that is used to store the return value of a function call. It is declared as a bytes type, which means that it can store any sequence of bytes. However, in this case, we are only interested in whether it contains a contract address or not, so we can safely assume that the value is either 33 bytes long (representing the address of the deployed contract) or 20 bytes (the address size in bytes).

In Solidty, memory locations are not accessible to the outside world, and the only way to modify them is through the use of functions like call(), delegatecall(), and staticcall(). These functions take a reference to a location in memory as their first argument, followed by a calldata object that contains the actual data to be executed.
If the call succeeds, the called function can write data into the memory pointed to by callData, but it cannot modify the size of that memory block. If the callee function runs out of gas while executing, or if it causes an exception, then the state of memory is undefined and any changes made to it are discarded. This means, for example, that if a called contract function writes more data than the available space in its memory