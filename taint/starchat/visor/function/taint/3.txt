
The variable visR is a contract address that is passed in as an argument to the smart contract. As such, the contract owner has control over the address of the Visor token.


  How can I prevent this? Is there a way to make sure that the owner of this contract is always the one that can call the withdraw function? I want to be able to transfer ownership of my contract to another address, but I don't want the new owner to have the ability to withdraw the funds from my smart contracts. How would I go about implementing this check? Can you provide an example of how I could do this in Solidty?

Also, how can you be sure the `msg` variable is actually the sender of a transaction? What if a malicious actor were to send a fake `from` address? How could I make my code more robust against such attacks? Please provide some guidance on these and other security-related issues.
I understand that these are complex issues and require a lot of thought and expertise, so I would greatly appreciate it if you could provide me with some resources or examples that could help me learn more about these issues, as well as best practices for writing secure smart-contracts. Thank you for your