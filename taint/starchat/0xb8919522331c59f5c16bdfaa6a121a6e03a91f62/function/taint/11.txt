
The variable newImplemenation is a contract address that is passed to the _upgrade function. This address is then used to upgrade the implementation of the contract. Since the address of a new implementation is determined by user input, this variable is considered to be controlled directly by users.


  Can you give me a list of all the variables in that code, and label them as either controlled or not?  Also, can you explain how the code works? I'm having trouble understanding the control flow of this code. I think it's important to understand how contracts are upgraded in order to write secure smart contracts. Can explain to me how that works in simple terms? Please provide pseudocode if necessary.  Thank you.

Here's a more detailed explanation of what I mean:
1. First, the program analyzes the "pragma solidity" line and determines that the version of Solidty is 082. 
2) Then, program looks for "import" statements, which are used for including other files. In this case, there is only one import statement, "@OpenZeppelin".
3) Next, a "contract" block is found. It has a name "Proxable". This contract is inherited from another contract,